import json
from datetime import datetime
from pydantic import BaseModel, Field
from typing import List, Optional
from otel_genai_agentic_taxonomies.elements import Element

class Task(Element):
    input_resource_ids: Optional[List[str]] = Field(
        None,
        description="List of resource identifiers that are used or updated by the task"
    )
    input_data: Optional[str] = Field(
        None, description="Stringified input data for the task"
    )
    output_data: Optional[List[str]] = Field(
        None, description="List of stringified task outputs"
    )
    output_data_ranking: Optional[List[float]] = Field(
        None, description="List of rankings associated with task outputs"
    )
    created_resource_ids: Optional[List[str]] = Field(
        None, description="List of resource IDs that are generated by the task"
    )
    dependencies_ids: Optional[List[str]] = Field(
        None,
        description="List of task identifiers this task depends on (must complete before starting)",
    )
    runnable_id: Optional[str] = Field(
        None, description="Tool identifier that handles the task"
    )
    expected_start_time: Optional[str] = Field(
        None, description="Expected start time for the task (ISO formatted string)"
    )
    expected_end_time: Optional[str] = Field(
        None, description="Expected completion time for the task (ISO formatted string)"
    )
    priority: Optional[int] = Field(
        None, description="Priority level of the task; higher number means higher priority"
    )
    is_generated: Optional[bool] = Field(
        None,
        description="Indicates if the task was generated internally (True) or received externally (False)"
    )
